{"version":3,"sources":["webpack:///./src/views/java/Tableaux.vue","webpack:///./src/views/java/Tableaux.vue?596f"],"names":["class","inlineCode","lang","name","components","ShowCode","__exports__","render"],"mappings":"2IAEE,eAAqB,UAAjB,gBAAY,G,EAChB,eAAoG,SAAjG,iGAA6F,G,EAEhG,eAAiC,UAA7B,4BAAwB,G,GACvBA,MAAM,iB,EACX,eAA0I,SAAvI,uIAAmI,G,EACtI,eAA6E,SAA1E,0EAAsE,G,EACzE,eAAwF,SAArF,qFAAiF,G,GAC/EA,MAAM,iB,EACX,eAAkK,SAA/J,+JAA2J,G,EAE9J,eAA+B,UAA3B,0BAAsB,G,EAC1B,eAAqE,SAAlE,kEAA8D,G,GAC5DA,MAAM,iB,EACX,eAA4B,SAAzB,yBAAqB,G,GACnBA,MAAM,iB,EACX,eAAkI,SAA/H,+HAA2H,G,EAC9H,eAAwD,SAArD,qDAAiD,G,GAC/CA,MAAM,iB,EACX,eAAgG,SAA7F,6FAAyF,G,EAE5F,eAAoC,UAAhC,+BAA2B,G,EAC/B,eAA6H,SAA1H,0HAAsH,G,GACpHA,MAAM,iB,EACX,eAA+B,SAA5B,4BAAwB,G,GACtBA,MAAM,iB,EAGX,eAA4G,SAAzG,yGAAqG,G,EAExG,eAA6B,UAAzB,wBAAoB,G,EACxB,eAAsE,SAAnE,mEAA+D,G,GAC7DA,MAAM,iB,EAGX,eAA8B,SAA3B,2BAAuB,G,GACrBA,MAAM,iB,iFArCZ,eA0CM,YAzCL,EACA,EAEA,EACA,eAAwH,MAAxH,EAAwH,CAA7F,eAAuF,GAA7EC,WAAW,qDAAqDC,KAAK,WAC1G,EACA,EACA,EACA,eAAyK,MAAzK,EAAyK,CAA9I,eAAwI,GAA9HD,WAAW,sGAAsGC,KAAK,WAC3J,EAEA,EACA,EACA,eAAwG,MAAxG,EAAwG,CAA7E,eAAuE,GAA7DD,WAAW,qCAAqCC,KAAK,WAC1F,EACA,eAAwF,MAAxF,EAAwF,CAA7D,eAAuD,GAA7CD,WAAW,qBAAqBC,KAAK,WAC1E,EACA,EACA,eAAwF,MAAxF,EAAwF,CAA7D,eAAuD,GAA7CD,WAAW,qBAAqBC,KAAK,WAC1E,EAEA,EACA,EACA,eAA6H,MAA7H,EAA6H,CAAlG,eAA4F,GAAlFD,WAAW,0DAA0DC,KAAK,WAC/G,EACA,eAEoE,MAFpE,EAEoE,CAFzC,eAEmC,GAFzBD,WAAW,0JAECC,KAAK,WACtD,EAEA,EACA,EACA,eAEoB,MAFpB,EAEoB,CAFO,eAEb,GAFuBD,WAAW,yFAE/CC,KAAK,WACN,EACA,eAIoB,MAJpB,EAIoB,CAJO,eAIb,GAJuBD,WAAW,uJAI/CC,KAAK,a,gBAOQ,GACdC,KAAM,WACNC,WAAY,CACXC,WAAA,O,qBC/CH,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,KAErD","file":"js/chunk-2d0c4aa1.25afec3c.js","sourcesContent":["<template>\n\t<div>\n\t\t<h1>Les tableaux</h1>\n\t\t<p>Un tableau est une variable qui contient plusieurs valeurs, différenciables grâce à un index.</p>\n\n\t\t<h3>Déclaration d'un tableau</h3>\n\t\t<pre class=\"language-java\"><ShowCode inlineCode=\"int monTableau[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};\" lang=\"java\"/></pre>\n\t\t<p>Un tableau ne peut contenir que des valeurs de même type. Il est impossible de créer un tableau qui contient des int ET des String.</p>\n\t\t<p>Une fois la taille du tableau choisi, elle ne peut plus être modifiée.</p>\n\t\t<p>Si vous ne voulez pas initialiser votre tableau, vous pouvez le noter comme ceci.</p>\n\t\t<pre class=\"language-java\"><ShowCode inlineCode=\"int monTableau[] = new int[10]; //Le 10 représente la taille du tableau, inchangeable par la suite.\" lang=\"java\"/></pre>\n\t\t<p>Attention cependant, car avec cette méthode, toutes les cases vaudront null, ce qui veut dire qu'elles ne seront pas utilisables tel quel pour des calculs.</p>\n\n\t\t<h3>Utilisation du tableau</h3>\n\t\t<p>Voici le code pour récupérer la valeur d'une case du tableau :</p>\n\t\t<pre class=\"language-java\"><ShowCode inlineCode=\"System.out.println(monTableau[2]);\" lang=\"java\"/></pre>\n\t\t<p>Et pour la modifier :</p>\n\t\t<pre class=\"language-java\"><ShowCode inlineCode=\"monTableau[2] = 5;\" lang=\"java\"/></pre>\n\t\t<p>Attention, les index commencent à 0, donc l'index de la dernière case du tableau est égale a la taille du tableau moins un.</p>\n\t\t<p>Il existe un attribut pour la taille du tableau :</p>\n\t\t<pre class=\"language-java\"><ShowCode inlineCode=\"monTableau.length;\" lang=\"java\"/></pre>\n\t\t<p>Attention il s'agit d'un attribut, notez juste qu'il s'écrit comme ceci sans parenthèses.</p>\n\n\t\t<h3>Les tableaux à 2 dimensions</h3>\n\t\t<p>Il est aussi possible de créer un tableau de type int[]. Concrètement un tableau de tableaux. Il se déclare comme ça :</p>\n\t\t<pre class=\"language-java\"><ShowCode inlineCode=\"int monTableau[][] = { {0, 1, 2},{3, 4, 5},{6, 7, 8} };\" lang=\"java\"/></pre>\n\t\t<p>On y accède comme cela :</p>\n\t\t<pre class=\"language-java\"><ShowCode inlineCode=\"System.out.println(monTableau[0][0]); //affiche 0\nSystem.out.println(monTableau[0][1]); //affiche 1\nSystem.out.println(monTableau[1][0]); //affiche 3\" lang=\"java\"/></pre>\n\t\t<p>On peut bien sûr aussi faire des tableaux à 3, 4 ou 5 dimensions. Mais ça n'a pas vraiment d'intérêt.</p>\n\n\t\t<h3>Parcourir un tableau</h3>\n\t\t<p>Les boucles for sont très pratiques pour parcourir un tableau :</p>\n\t\t<pre class=\"language-java\"><ShowCode inlineCode=\"for (int i = 0; i < monTableau.length; i++) {\n\tSystem.out.println(monTableau[i]);\n}\" lang=\"java\"/></pre>\n\t\t<p>Et pour un tableau 2D :</p>\n\t\t<pre class=\"language-java\"><ShowCode inlineCode=\"for (int i = 0; i < monTableau.length; i++) {\n\tfor (int j = 0; j < monTableau[i].length; j++) {\n\t\tSystem.out.println(monTableau[i][j]);\n\t}\n}\" lang=\"java\"/></pre>\n\t</div>\n</template>\n\n<script>\n\timport ShowCode from '../../components/ShowCode.vue'\n\n\texport default {\n\t\tname: 'Tableaux',\n\t\tcomponents: {\n\t\t\tShowCode,\n\t\t},\n\t}\n</script>\n","import { render } from \"./Tableaux.vue?vue&type=template&id=5d3bbb38\"\nimport script from \"./Tableaux.vue?vue&type=script&lang=js\"\nexport * from \"./Tableaux.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/epsic.burkhalter.dev/epsic.burkhalter.dev/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}