{"version":3,"sources":["webpack:///./src/views/html/Form.vue","webpack:///./src/views/html/Form.vue?b49c"],"names":["class","action","method","for","type","name","id","value","href","target","file","lang","inlineCode","to","components","ShowCode","__exports__","render"],"mappings":"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","file":"js/chunk-2d0bd98c.f2cd0c7f.js","sourcesContent":["<template>\n\t<div>\n\t\t<h1>Les formulaires</h1>\n\t\t<p>Les formulaires servent souvent √† communiquer avec un backend. Ils peuvent aussi √™tre utilis√© avec le JavaScript comme champ d'entr√©e pour les calculs. Sur cette page, nous n'allons voir ni l'une, ni l'autre des m√©thodes. Car nous n'avons pas de backend si l'on fait un site statique en HTML et parce que le JavaScript fera l'objet de la 3√®me partie du module.</p>\n\t\t<p>Voici un exemple de formulaire avec quelques champs</p>\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-6\">\n\t\t\t\t<pre class=\"language-html\"><ShowCode file=\"html/form.html\" lang=\"html\"/></pre>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-6 text-center\">\n\t\t\t\t<br>\n\t\t\t\t<form action=\"login_form.php\" method=\"POST\">\n\t\t\t\t\t<label for=\"username\">Nom d'utilisateur :&nbsp;</label>\n\t\t\t\t\t<input type=\"text\" name=\"username\" id=\"username\"><br>\n\t\t\t\t\t<label for=\"password\">Mot de passe :&nbsp;</label>\n\t\t\t\t\t<input type=\"password\" name=\"password\" id=\"password\"><br>\n\t\t\t\t\t<input type=\"submit\" value=\"Envoyer\">\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t\t<p>Regardons tout cela de plus pr√®s :</p>\n\t\t<ul>\n\t\t\t<li>Les champs doivent se trouver dans une balise <ShowCode inlineCode=\"<form>\" lang=\"html\"/>.</li>\n\t\t\t<li>La balise <ShowCode inlineCode=\"<form>\" lang=\"html\"/> a deux attributs :</li>\n\t\t\t<ul>\n\t\t\t\t<li><code>action</code> va √™tre la page sur laquelle envoyer la requ√™te.</li>\n\t\t\t\t<li><code>method</code> va √™tre le verbe HTTP utilis√© (GET ou POST). Dans ce cours on va principalement utiliser GET puisque nous n'avons pas de backend.</li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>GET va passer les champs dans l'URL.</li>\n\t\t\t\t\t<li>POST les passe dans la requ√™te HTTP et n√©cessite donc un serveur backend pour les r√©cup√©rer (ex: PHP).</li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<li>Les champs sont d√©finis par la balise <ShowCode inlineCode=\"<input>\" lang=\"html\"/> qui prend aussi deux attributs :</li>\n\t\t\t<ul>\n\t\t\t\t<li><code>type</code> est le type de champs. Valeurs possibles : <code>text</code>, <code>password</code>, <code>checkbox</code>, <code>radio</code>, <code>file</code>, etc...</li>\n\t\t\t\t<li><code>name</code> qui permet de r√©cup√©rer la valeur du formulaire dans le backend ou le JavaScript.</li>\n\t\t\t</ul>\n\t\t\t<li>Les noms affich√©s des champs doivent se trouver dans une balise <ShowCode inlineCode=\"<label>\" lang=\"html\"/> qui a un attribut :</li>\n\t\t\t<ul>\n\t\t\t\t<li><code>for</code> \"lie\" le label au champ. Principalement pour qu'un clic sur le label permette directement de modifier le champ (essayez-par vous-m√™me üòâ). Pour que cela fonctionne, il faut avoir ajout√© un attribut <code>id</code> au champ. En effet, l'attribut <code>for</code> se r√©f√®re √† un id et non au name. Mettre la m√™me valeur suffira.</li>\n\t\t\t</ul>\n\t\t\t<li>‚ö† les champs comme les labels sont des balises de type <router-link to=\"/html/types_balises\">inline</router-link>. Si vous ne les forc√© pas (par exemple avec un <ShowCode inlineCode=\"<br>\" lang=\"html\"/>), elles se mettront toute sur une ligne.</li>\n\t\t\t<li>Les boutons d'envoie ne sont en fait que des balises <ShowCode inlineCode=\"<input>\" lang=\"html\"/> avec le type submit. Leur attribut <code>value</code> permet de modifier le texte de leur bouton.</li>\n\t\t\t<ul>\n\t\t\t\t<li>Il existe aussi un bouton de type <code>reset</code> qui vide enti√®rement le formulaire.</li>\n\t\t\t</ul>\n\t\t</ul>\n\n\t\t<h2>Liste d√©roulante</h2>\n\t\t<p>La balise <ShowCode inlineCode=\"<input>\" lang=\"html\"/> ne permet pas de cr√©er de liste d√©roulante. √Ä la place, nous utiliserons <ShowCode inlineCode=\"<select>\" lang=\"html\"/> et <ShowCode inlineCode=\"<option>\" lang=\"html\"/> :</p>\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-6\">\n\t\t\t\t<pre class=\"language-html\"><ShowCode file=\"html/select.html\" lang=\"html\"/></pre>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-6 text-center\">\n\t\t\t\t<br>\n\t\t\t\t<select name=\"character\" id=\"character\">\n\t\t\t\t\t<option>Mario</option>\n\t\t\t\t\t<option>Luigi</option>\n\t\t\t\t\t<option>Wario</option>\n\t\t\t\t\t<option>Waluigi</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t\t<p>‚ö† J'ai ici omis la balise <ShowCode inlineCode=\"<form>\" lang=\"html\"/> pour des raisons de visibilit√©s mais ne l'oubliez pas.</p>\n\t\t<p>Il y a vraiment √©norm√©ment d'attributs en HTML. Il m'est difficile de tous les pr√©senter au risque de donner trop d'informations. Le mieux est que vous cherchiez par vous-m√™me lorsque vous avez besoin de quelque chose en particulier (je recommande <a href=\"https://www.w3schools.com/\" target=\"_blank\">W3Schools</a> pour l'HTML).</p>\n\t</div>\n</template>\n\n<script>\n\timport ShowCode from '../../components/ShowCode.vue'\n\n\texport default {\n\t\tname: 'Form',\n\t\tcomponents: {\n\t\t\tShowCode,\n\t\t},\n\t}\n</script>\n","import { render } from \"./Form.vue?vue&type=template&id=67033dbb\"\nimport script from \"./Form.vue?vue&type=script&lang=js\"\nexport * from \"./Form.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/epsic.burkhalter.dev/epsic.burkhalter.dev/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}