{"version":3,"sources":["webpack:///./src/views/poo/Encapsulation.vue","webpack:///./src/views/poo/Encapsulation.vue?53ed"],"names":["class","to","file","lang","name","components","ShowCode","__exports__","render"],"mappings":"2IAEE,eAAwB,UAApB,mBAAe,G,EACnB,eAAiL,SAA9K,8KAA0K,G,EAC7K,eAA4H,SAAzH,yHAAqH,G,EACxH,eAAuJ,SAApJ,oJAAgJ,G,EACnJ,eAAI,mB,EACJ,eAAI,mB,EACJ,eAAoL,SAAjL,iLAA6K,G,EAChL,eAAsE,SAAnE,mEAA+D,G,EAEjE,eAAkF,WAA9E,eAAuB,cAAf,U,eAAe,wD,KACvB,eAA0B,cAAlB,aAAS,G,iBAAS,2E,iBAAuG,U,EACrI,eAA4F,WAAxF,eAAwB,cAAhB,W,eAAgB,iE,KAG7B,eAAuC,UAAnC,kCAA8B,G,EAClC,eAA6F,SAA1F,0FAAsF,G,GACpFA,MAAM,iB,EACX,eAAwE,SAArE,qEAAiE,G,EACpE,eAAwE,SAArE,qEAAiE,G,EAEpE,eAA8B,UAA1B,yBAAqB,G,EACzB,eAA0G,SAAvG,uGAAmG,G,EACtG,eAAqG,SAAlG,kGAA8F,G,EACjG,eAAuH,SAApH,oHAAgH,G,EACnH,eAAI,mB,EACJ,eAAqE,SAAlE,kEAA8D,G,GAC5DA,MAAM,iB,EACX,eAAmG,SAAhG,gGAA4F,G,iHA5BhG,eA6BM,YA5BL,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,eAIK,WAHJ,EACA,eAA8J,WAA1J,E,EAAiG,eAAoD,GAAvCC,GAAG,iBAAe,C,wBAAC,iBAAM,C,cAC3I,IAGD,EACA,EACA,eAAuF,MAAvF,EAAuF,CAA5D,eAAsD,GAA5CC,KAAK,0BAA0BC,KAAK,WACzE,EACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,eAAuF,MAAvF,EAAuF,CAA5D,eAAsD,GAA5CD,KAAK,0BAA0BC,KAAK,WACzE,I,gBAOc,GACdC,KAAM,gBACNC,WAAY,CACXC,WAAA,O,qBClCH,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,KAErD","file":"js/chunk-2d0c08c1.820e9f07.js","sourcesContent":["<template>\n\t<div>\n\t\t<h1>L'encapsulation</h1>\n\t\t<p>Dans de gros projets informatiques, on aime pouvoir diviser les taches entre plusieurs développeurs. Et chaque développeur ne peut pas forcément connaître tout le projet.</p>\n\t\t<p>Les fonctions mises en place par certains développeurs devront néanmoins interagir avec celles d'autres développeurs.</p>\n\t\t<p>La solution est de définir des inputs et des outputs pour chaque objet sans se préoccuper de leurs fonctionnements, juste de leurs utilisations.</p>\n\t\t<br>\n\t\t<br>\n\t\t<p>Pour mettre ça en place, il ne faut pas que n'importe quel objet puisse modifier les attributs ou appeler certaines méthodes d'un autre objet. Cela pourrait le faire bugger.</p>\n\t\t<p>On a donc mis en place un système de \"droit\" entre les objets :</p>\n\t\t<ul>\n\t\t\t<li><strong>public</strong> : l'élément est visible depuis toutes les classes</li>\n\t\t\t<li><strong>protected</strong> : l'élément n'est visible que dans le package et les classe dont elle <router-link to=\"/poo/heritage\">hérite</router-link></li>\n\t\t\t<li><strong>private</strong> : l'élément est visible uniquement dans la classe en cours</li>\n\t\t</ul>\n\n\t\t<h3>Définir la portée d'un élément</h3>\n\t\t<p>Pour définir la portée d'un attribut ou d'une méthode, on l'ajoute simplement devant :</p>\n\t\t<pre class=\"language-java\"><ShowCode file=\"poo/encapsulation0.java\" lang=\"java\"/></pre>\n\t\t<p>Ici les 3 attributs sont en private et la fonction est en public.</p>\n\t\t<p>Attention, on met toujours les attributs en protected ou private.</p>\n\n\t\t<h3>Accéder aux attributs</h3>\n\t\t<p>Mais si on met les attributs en protected ou private, certaine classe ne pourront pas les utiliser.</p>\n\t\t<p>Pour remédier à ce problème, on crée des getters et des setters. Ce sont des fonctions public.</p>\n\t\t<p>Le rôle des getters et de renvoyer un attribut. Et celui des setters de remplacer un attribut avec un paramètre.</p>\n\t\t<br>\n\t\t<p>Voici la classe Personne avec un getter et un setter pour nom.</p>\n\t\t<pre class=\"language-java\"><ShowCode file=\"poo/encapsulation1.java\" lang=\"java\"/></pre>\n\t\t<p>Je ne l'ai volontairement pas fait pour tous les attributs pour ne pas surcharger l'exemple.</p>\n\t</div>\n</template>\n\n<script>\n\timport ShowCode from '../../components/ShowCode.vue'\n\n\texport default {\n\t\tname: 'Encapsulation',\n\t\tcomponents: {\n\t\t\tShowCode,\n\t\t},\n\t}\n</script>\n","import { render } from \"./Encapsulation.vue?vue&type=template&id=1a774ed6\"\nimport script from \"./Encapsulation.vue?vue&type=script&lang=js\"\nexport * from \"./Encapsulation.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/epsic.burkhalter.dev/epsic.burkhalter.dev/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}