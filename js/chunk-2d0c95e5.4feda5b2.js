(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c95e5"],{"599d":function(t,e,d){"use strict";d.r(e);var r=d("7a23"),n=Object(r["h"])('<h1>Les fonctions logiques</h1><p>Les fonctions logiques sont les seules opérations qu&#39;un processeur peut effectuer. Il les combine ensuite pour en faire des plus complexes tel que l&#39;addition, multiplication, etc...</p><p>Les 7 fonctions logiques de base sont :</p><ul><li>NOT</li><li>AND</li><li>OR</li><li>XOR</li><li>NAND</li><li>NOR</li><li>NXOR</li></ul><hr><h3>NOT (fonction inverse)</h3><p>Ne prend qu&#39;un paramètre et en renvoie l&#39;inverse :</p><p>Table de vérité :</p><table class="table-responsive"><tr><th>A</th><th>S</th></tr><tr><td>0</td><td>1</td></tr><tr><td>1</td><td>0</td></tr></table><p>Équation :</p><p>S = <span style="text-decoration:overline;">A</span></p><hr><h3>AND (fonction ET)</h3><p>Renvoie 1 si toutes les entrées sont à 1</p><p>Table de vérité :</p><table class="table-responsive"><tr><th>A</th><th>B</th><th>S</th></tr><tr><td>0</td><td>0</td><td>0</td></tr><tr><td>0</td><td>1</td><td>0</td></tr><tr><td>1</td><td>0</td><td>0</td></tr><tr><td>1</td><td>1</td><td>1</td></tr></table><p>Équation :</p><p>S = A ∙ B</p><p>ou</p><p>S = A ∧ B</p><hr><h3>OR (fonction OU)</h3><p>Renvoie 1 si au moins une entrée est à 1</p><p>Table de vérité :</p><table class="table-responsive"><tr><th>A</th><th>B</th><th>S</th></tr><tr><td>0</td><td>0</td><td>0</td></tr><tr><td>0</td><td>1</td><td>1</td></tr><tr><td>1</td><td>0</td><td>1</td></tr><tr><td>1</td><td>1</td><td>1</td></tr></table><p>Équation :</p><p>S = A + B</p><p>ou</p><p>S = A ∨ B</p><hr><h3>XOR (fonction OU exclusif)</h3><p>Renvoie 1 si une seule entrée est à 1</p><p>Table de vérité :</p><table class="table-responsive"><tr><th>A</th><th>B</th><th>S</th></tr><tr><td>0</td><td>0</td><td>0</td></tr><tr><td>0</td><td>1</td><td>1</td></tr><tr><td>1</td><td>0</td><td>1</td></tr><tr><td>1</td><td>1</td><td>0</td></tr></table><p>Équation :</p><p>S = A ⊕ B</p><p>Attention, s&#39;il y a plus de deux entrées, la fonction renvoie 1 s&#39;il y a un nombre impaire de 1.</p><hr><h3>NAND (combinaison de NOT et AND)</h3><p>Renvoie 0 si toutes les entrées sont à 1</p><p>Table de vérité :</p><table class="table-responsive"><tr><th>A</th><th>B</th><th>S</th></tr><tr><td>0</td><td>0</td><td>1</td></tr><tr><td>0</td><td>1</td><td>1</td></tr><tr><td>1</td><td>0</td><td>1</td></tr><tr><td>1</td><td>1</td><td>0</td></tr></table><p>Équation :</p><p>S = <span style="text-decoration:overline;">A ∙ B</span></p><p>ou</p><p>S = <span style="text-decoration:overline;">A ∧ B</span></p><hr><h3>NOR (combinaison de NOT et OR)</h3><p>Renvoie 0 si au moins une entrée est à 1</p><p>Table de vérité :</p><table class="table-responsive"><tr><th>A</th><th>B</th><th>S</th></tr><tr><td>0</td><td>0</td><td>1</td></tr><tr><td>0</td><td>1</td><td>0</td></tr><tr><td>1</td><td>0</td><td>0</td></tr><tr><td>1</td><td>1</td><td>0</td></tr></table><p>Équation :</p><p>S = <span style="text-decoration:overline;">A + B</span></p><p>ou</p><p>S = <span style="text-decoration:overline;">A ∨ B</span></p><hr><h3>NXOR (combinaison de NOT et XOR)</h3><p>Renvoie 0 si une seule entrée est à 1</p><p>Table de vérité :</p><table class="table-responsive"><tr><th>A</th><th>B</th><th>S</th></tr><tr><td>0</td><td>0</td><td>1</td></tr><tr><td>0</td><td>1</td><td>0</td></tr><tr><td>1</td><td>0</td><td>0</td></tr><tr><td>1</td><td>1</td><td>1</td></tr></table><p>Équation :</p><p>S = <span style="text-decoration:overline;">A ⊕ B</span></p><p>Attention, s&#39;il y a plus de deux entrées, la fonction renvoie 1 s&#39;il y a un nombre pair de 1.</p>',63),p=[n];function s(t,e,d,n,s,i){return Object(r["s"])(),Object(r["f"])("div",null,p)}var i={name:"FonctionsLogiques"},o=d("d959"),l=d.n(o);const a=l()(i,[["render",s]]);e["default"]=a}}]);
//# sourceMappingURL=chunk-2d0c95e5.4feda5b2.js.map