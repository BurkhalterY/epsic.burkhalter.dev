{"version":3,"sources":["webpack:///./src/views/bin/Negativ.vue","webpack:///./src/views/bin/Negativ.vue?4505"],"names":["name","__exports__","render"],"mappings":"yrEAEE,G,gDADD,eA4CM,cAIS,OACdA,KAAM,W,qBC7CR,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,KAErD","file":"js/chunk-2d0a4baf.895d1a65.js","sourcesContent":["<template>\n\t<div>\n\t\t<h1>Soustractions et nombres négatifs</h1>\n\t\t<p>Pour utiliser des entiers signés dans l'ordinateur, on doit utiliser le MSB pour le signe.</p>\n\t\t<p>Et afin de pouvoir faire des opérations avec nombres négatifs, il faut que ces nombres se suivent. D'où le cercle suivant :</p>\n\t\t<img src=\"/medias/bin/negativ_circle.gif\" alt=\"Cyclicité\" width=\"400\" />\n\t\t<br><br>\n\t\t<p>Avec ce système, on peut coder les nombres de -2<sup>N-1</sup> à 2<sup>N-1</sup>-1. Par exemple avec 8 bits : -128 à 127.</p>\n\n\t\t<p>Pour trouver la valeur négative d'un nombre, il faut faire le complément à 2.</p>\n\n\t\t<h3>Le complément à 1</h3>\n\t\t<p>Le complément à 1 est la première étape du complément à 2.</p>\n\t\t<p>Pour trouver le complément à 1, il suffit d'inverser tous les bits du nombre.</p>\n\t\t<p>Exemple :<br> 9 en binaire = 1001<br>Complément à 1 de 9 en binaire = 0110</p>\n\n\t\t<h3>Le complément à 2</h3>\n\t\t<p>Pour trouver le complément à 2 :</p>\n\t\t<ul>\n\t\t\t<li>Faire le complément à 1 (inverser les 0 et les 1)</li>\n\t\t\t<li>Incrémenter (Additionner 1)</li>\n\t\t</ul>\n\t\t<p>Exemple :</p>\n\t\t<ul>\n\t\t\t<li> 5 en binaire = 0101</li>\n\t\t\t<li>Complément à 1 de 5 en binaire = 1010</li>\n\t\t\t<li>Complément à 2 de 5 en binaire = 1011</li>\n\t\t\t<li>-5 = 1011</li>\n\t\t</ul>\n\n\t\t<h3>Faire une soustraction</h3>\n\t\t<p>Il est difficile de faire une soustraction en binaire car il y a beaucoup de retenus. À la place, on préfère additionner l'opposé du nombre. Explication :</p>\n\t\t<p>Au lieu de faire 7 - 3, on fait 7 + (-3).</p>\n\t\t<p>Donc en binaire au lieu de faire 0111 - 0011, on fait 0111 + 1101.</p>\n\t\t<p>Exemple :</p>\n\t\t<img src=\"/medias/bin/sub.png\" alt=\"0111 + 1101 = 0100\" width=\"200\" />\n\t\t<p>Si le nombre dépasse (comme ici le 1 barré), simplement ne pas en tenir compte.</p>\n\n\t\t<h3>Trouver la valeur d'un nombre négatif</h3>\n\t\t<p>Imaginons qu'on ait un nombre comme 1011 codé sur 4 bits, on sait qu'il est négatif, mais on ne peut pas connaître sa valeur. Pour se faire, il va falloir faire le complément à 2 à l'envers. Soit :</p>\n\t\t<ul>\n\t\t\t<li>Soustraire le nombre de 1</li>\n\t\t\t<li>Inverser tous les bits</li>\n\t\t</ul>\n\t\t<p>Ce qui donne 0101. De là, on peut facilement calculer 5. Donc 1011 = -5.</p>\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\tname: 'Negativ',\n\t}\n</script>\n","import { render } from \"./Negativ.vue?vue&type=template&id=2540459d\"\nimport script from \"./Negativ.vue?vue&type=script&lang=js\"\nexport * from \"./Negativ.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/epsic.burkhalter.dev/epsic.burkhalter.dev/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}