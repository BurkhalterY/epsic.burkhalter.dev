(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0e6865"],{"98b2":function(s,e,n){"use strict";n.r(e);var r=n("7a23"),a=Object(r["h"])('<h1>Structure d&#39;une adresse IP</h1><p style="text-align:center;"><span style="background-color:lightgray;"><strong><span style="color:red;">[ NET_ID ]</span> <span style="color:blue;">[ HOST_ID ]</span></strong></span></p><p style="text-align:center;">Classe A: <span style="background-color:lightgray;"><strong><span style="color:red;">x</span>.<span style="color:blue;">x.x.x</span></strong></span></p><p style="text-align:center;">Classe B: <span style="background-color:lightgray;"><strong><span style="color:red;">x.x</span>.<span style="color:blue;">x.x</span></strong></span></p><p style="text-align:center;">Classe C: <span style="background-color:lightgray;"><strong><span style="color:red;">x.x.x</span>.<span style="color:blue;">x</span></strong></span></p><hr><p style="text-align:center;"><span style="background-color:lightgray;"><strong><span style="color:red;">[ NET_ID ]</span> <span style="color:green;">[ SUBNET_ID ]</span> <span style="color:blue;">[ HOST_ID ]</span></strong></span></p><p>S&#39;il y a un sous-réseau, le SUBNET_ID ce calcul comme ceci : IP &amp; MASQUE.</p><h4>L&#39;opération &amp;</h4><p>Revoie 1 si les deux paramètres valent 1.</p><p>0 &amp; 0 = 0<br>0 &amp; 1 = 0<br>1 &amp; 0 = 0<br>1 &amp; 1 = 1</p><h4>Exemple :</h4><p>IP = 172.22.66.18<br>MASQUE = 255.255.252.0</p><pre>  10101100.00011110.01000010.00010010<br>&amp; 11111111.11111111.11111100.00000000<br>= 10101100.00011110.01000000.00000000</pre><p>NET_ID = 172.22.0.0<br>SUBNET_ID = 172.22.64.0</p>',15),p=[a];function t(s,e,n,a,t,l){return Object(r["s"])(),Object(r["f"])("div",null,p)}var l={name:"StructureIp"},o=n("d959"),c=n.n(o);const g=c()(l,[["render",t]]);e["default"]=g}}]);
//# sourceMappingURL=chunk-2d0e6865.0020109e.js.map