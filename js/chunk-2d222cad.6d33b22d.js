(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d222cad"],{cfb6:function(e,a,n){"use strict";n.r(a);var s=n("7a23"),c=Object(s["g"])("h1",null,"Les interfaces",-1),t=Object(s["g"])("p",null,"Une interface ressemble beaucoup à une classe abstraite. Mais avec une grosse différence : une classe peut utiliser plusieurs interfaces.",-1),l=Object(s["g"])("p",null,"Déclaration d'une interface :",-1),i={class:"language-java"},u=Object(s["g"])("p",null,"Utilisation d'une interface dans une classe :",-1),r={class:"language-java"},o=Object(s["g"])("br",null,null,-1),j=Object(s["g"])("p",null,"Cas pratique : vous voulez que certaines de vos classes puissent afficher une description d'elles-mêmes",-1),p=Object(s["g"])("p",null,"On crée donc une classe abstraite Description par exemple :",-1),b={class:"language-java"},f=Object(s["g"])("p",null,"Et dans toutes nos classe où l'on veut qu'elle puissent afficher une description, on implémente l'interface : Exemple avec 2 classes.",-1),g={class:"language-java"},v={class:"language-java"},O=Object(s["g"])("p",null,"On peut ainsi faire des tableaux de type Description et le boucler pour afficher toutes les descriptions.",-1);function d(e,a,n,d,m,h){var w=Object(s["z"])("ShowCode");return Object(s["s"])(),Object(s["f"])("div",null,[c,t,l,Object(s["g"])("pre",i,[Object(s["j"])(w,{file:"poo/interfaces0.java",lang:"java"})]),u,Object(s["g"])("pre",r,[Object(s["j"])(w,{file:"poo/interfaces1.java",lang:"java"})]),o,j,p,Object(s["g"])("pre",b,[Object(s["j"])(w,{file:"poo/interfaces2.java",lang:"java"})]),f,Object(s["g"])("pre",g,[Object(s["j"])(w,{file:"poo/interfaces3.java",lang:"java"})]),Object(s["g"])("pre",v,[Object(s["j"])(w,{file:"poo/interfaces4.java",lang:"java"})]),O])}var m=n("02c0"),h={name:"Interfaces",components:{ShowCode:m["a"]}},w=n("d959"),k=n.n(w);const q=k()(h,[["render",d]]);a["default"]=q}}]);
//# sourceMappingURL=chunk-2d222cad.6d33b22d.js.map