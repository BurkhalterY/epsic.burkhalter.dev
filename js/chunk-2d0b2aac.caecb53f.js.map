{"version":3,"sources":["webpack:///./src/views/java/Conditions.vue","webpack:///./src/views/java/Conditions.vue?901c"],"names":["class","file","lang","inlineCode","name","components","ShowCode","__exports__","render"],"mappings":"2IAEE,eAAuB,UAAnB,kBAAc,G,EAClB,eAAsF,SAAnF,mFAA+E,G,EAElF,eAAW,UAAP,MAAE,G,EACN,eAA2C,SAAxC,wCAAoC,G,GAClCA,MAAM,iB,EACX,eAAuD,SAApD,oDAAgD,G,EAEnD,eAAsC,UAAlC,iCAA6B,G,EACjC,eAAyI,SAAtI,sIAAkI,G,GAC9HA,MAAM,S,EACZ,eAOQ,cANP,eAKK,WAJJ,eAAgB,UAAZ,WACJ,eAAY,UAAR,OACJ,eAAgB,UAAZ,WACJ,eAAiB,UAAb,gB,KAKJ,eAAW,UAAP,MAAE,G,EACN,eAAgB,UAAZ,WAAO,G,GACFA,MAAM,iB,EACf,eAA0D,UAAtD,qDAAiD,G,EAGrD,eAAa,UAAT,KAAI,G,EACR,eAAuB,UAAnB,kBAAc,G,GACTA,MAAM,iB,EACf,eAAoE,UAAhE,+DAA2D,G,EAG/D,eAAa,UAAT,KAAI,G,EACR,eAAuB,UAAnB,kBAAc,G,GACTA,MAAM,iB,EACf,eAAmE,UAA/D,8DAA0D,G,EAG9D,eAAc,UAAV,MAAK,G,EACT,eAA4B,UAAxB,uBAAmB,G,GACdA,MAAM,iB,EACf,eAAmE,UAA/D,8DAA0D,G,EAG9D,eAAc,UAAV,MAAK,G,EACT,eAA4B,UAAxB,uBAAmB,G,GACdA,MAAM,iB,EACf,eAAkE,UAA9D,6DAAyD,G,EAG7D,eAAW,UAAP,MAAE,G,EACN,eAAkB,UAAd,aAAS,G,GACJA,MAAM,iB,EACf,eAA8E,UAA1E,yEAAqE,G,EAK5E,eAA4B,UAAxB,uBAAmB,G,EACvB,eAA+I,SAA5I,4IAAwI,G,GACpIA,MAAM,S,EACZ,eAOQ,cANP,eAKK,WAJJ,eAAgB,UAAZ,WACJ,eAAY,UAAR,OACJ,eAAgB,UAAZ,WACJ,eAAiB,UAAb,gB,KAKJ,eAAW,UAAP,MAAE,G,EACN,eAAW,UAAP,MAAE,G,GACGA,MAAM,iB,EACf,eAAiG,UAA7F,4FAAwF,G,EAG5F,eAAW,UAAP,MAAE,G,EACN,eAAW,UAAP,MAAE,G,GACGA,MAAM,iB,EACf,eAAyF,UAArF,oFAAgF,G,EAGpF,eAAU,UAAN,KAAC,G,EACL,eAAY,UAAR,OAAG,G,GACEA,MAAM,iB,EACf,eAAgI,UAA5H,2HAAuH,G,GAI9H,eAAkG,SAA/F,+FAA2F,G,IACzFA,MAAM,iB,GAGX,eAAa,UAAT,QAAI,G,GACR,eAAoG,SAAjG,iGAA6F,G,IAC3FA,MAAM,iB,sFAlGZ,eAmGM,YAlGL,EACA,EAEA,EACA,EACA,eAA4E,MAA5E,EAA4E,CAAjD,eAA2C,IAAjCC,KAAK,eAAeC,KAAK,WAC9D,EAEA,EACA,EACA,eA+CQ,QA/CR,EA+CQ,CA9CP,EAQA,eAqCQ,cApCP,eAKK,WAJJ,EACA,EACA,eAA2F,WAAvF,eAAkF,MAAlF,EAAkF,CAAvD,eAAiD,IAAvCC,WAAW,eAAeD,KAAK,aACxE,IAED,eAKK,WAJJ,EACA,EACA,eAA0F,WAAtF,eAAiF,MAAjF,EAAiF,CAAtD,eAAgD,IAAtCC,WAAW,cAAcD,KAAK,aACvE,IAED,eAKK,WAJJ,EACA,EACA,eAA0F,WAAtF,eAAiF,MAAjF,EAAiF,CAAtD,eAAgD,IAAtCC,WAAW,cAAcD,KAAK,aACvE,IAED,eAKK,WAJJ,EACA,EACA,eAA2F,WAAvF,eAAkF,MAAlF,EAAkF,CAAvD,eAAiD,IAAvCC,WAAW,eAAeD,KAAK,aACxE,IAED,eAKK,WAJJ,EACA,EACA,eAA2F,WAAvF,eAAkF,MAAlF,EAAkF,CAAvD,eAAiD,IAAvCC,WAAW,eAAeD,KAAK,aACxE,IAED,eAKK,WAJJ,EACA,EACA,eAA2F,WAAvF,eAAkF,MAAlF,EAAkF,CAAvD,eAAiD,IAAvCC,WAAW,eAAeD,KAAK,aACxE,QAKH,EACA,EACA,eA6BQ,QA7BR,EA6BQ,CA5BP,EAQA,eAmBQ,cAlBP,eAKK,WAJJ,EACA,EACA,eAAoG,WAAhG,eAA2F,MAA3F,EAA2F,CAAhE,eAA0D,IAAhDC,WAAW,wBAAwBD,KAAK,aACjF,IAED,eAKK,WAJJ,EACA,EACA,eAAoG,WAAhG,eAA2F,MAA3F,EAA2F,CAAhE,eAA0D,IAAhDC,WAAW,wBAAwBD,KAAK,aACjF,IAED,eAKK,WAJJ,EACA,EACA,eAA8F,WAA1F,eAAqF,MAArF,EAAqF,CAA1D,eAAoD,IAA1CC,WAAW,kBAAkBD,KAAK,aAC3E,QAIH,GACA,eACgI,MADhI,GACgI,CADrG,eAC+F,IADrFC,WAAW,qJAC6DD,KAAK,WAElH,GACA,GACA,eAA8E,MAA9E,GAA8E,CAAnD,eAA6C,IAAnCD,KAAK,iBAAiBC,KAAK,a,iBAOlD,IACdE,KAAM,aACNC,WAAY,CACXC,YAAA,O,wBCxGH,MAAMC,GAA2B,KAAgB,GAAQ,CAAC,CAAC,SAASC,MAErD","file":"js/chunk-2d0b2aac.caecb53f.js","sourcesContent":["<template>\n\t<div>\n\t\t<h1>Les conditions</h1>\n\t\t<p>Une condition sert à n'exécuter le code qui suit seulement si elle est remplie.</p>\n\n\t\t<h3>If</h3>\n\t\t<p>La condition if se note comme cela :</p>\n\t\t<pre class=\"language-java\"><ShowCode file=\"java/if.java\" lang=\"java\"/></pre>\n\t\t<p>Ici, condition est une variable de type boolean.</p>\n\n\t\t<h3>Les opérateurs de comparaison</h3>\n\t\t<p>Pour créer des valeurs boolean (qui ne peut contenir que vrai ou faux), on utilise des opérateurs de comparaison. Voici la liste :</p>\n\t\t<table class=\"table\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Symbole</th>\n\t\t\t\t\t<th>Nom</th>\n\t\t\t\t\t<th>Exemple</th>\n\t\t\t\t\t<th>Remarque</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>==</td>\n\t\t\t\t\t<td>Égalité</td>\n\t\t\t\t\t<td><pre class=\"language-java\"><ShowCode inlineCode=\"if (a == 10)\" lang=\"java\"/></pre></td>\n\t\t\t\t\t<td>Si la variable a vaut 10, la condition est vraie.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>&lt;</td>\n\t\t\t\t\t<td>Plus petit que</td>\n\t\t\t\t\t<td><pre class=\"language-java\"><ShowCode inlineCode=\"if (a < 10)\" lang=\"java\"/></pre></td>\n\t\t\t\t\t<td>Si la variable a vaut moins que 10, la condition est vraie.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>&gt;</td>\n\t\t\t\t\t<td>Plus grand que</td>\n\t\t\t\t\t<td><pre class=\"language-java\"><ShowCode inlineCode=\"if (a > 10)\" lang=\"java\"/></pre></td>\n\t\t\t\t\t<td>Si la variable a vaut plus que 10, la condition est vraie.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>&lt;=</td>\n\t\t\t\t\t<td>Plus petit ou égale</td>\n\t\t\t\t\t<td><pre class=\"language-java\"><ShowCode inlineCode=\"if (a <= 10)\" lang=\"java\"/></pre></td>\n\t\t\t\t\t<td>Si la variable a vaut 10 ou moins, la condition est vraie.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>&gt;=</td>\n\t\t\t\t\t<td>Plus grand ou égale</td>\n\t\t\t\t\t<td><pre class=\"language-java\"><ShowCode inlineCode=\"if (a >= 10)\" lang=\"java\"/></pre></td>\n\t\t\t\t\t<td>Si la variable a vaut 10 ou plus, la condition est vraie.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>!=</td>\n\t\t\t\t\t<td>Inégalité</td>\n\t\t\t\t\t<td><pre class=\"language-java\"><ShowCode inlineCode=\"if (a != 10)\" lang=\"java\"/></pre></td>\n\t\t\t\t\t<td>Si la variable a vaut n'importe quoi sauf 10, la condition est vraie.</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\n\t\t<h3>Conditions avancées</h3>\n\t\t<p>On peut également créer des combinaisons de conditions. Pour cela, on utilise les opérateurs logiques. Voici la liste avec des exemples.</p>\n\t\t<table class=\"table\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Symbole</th>\n\t\t\t\t\t<th>Nom</th>\n\t\t\t\t\t<th>Exemple</th>\n\t\t\t\t\t<th>Remarque</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>&&</td>\n\t\t\t\t\t<td>Et</td>\n\t\t\t\t\t<td><pre class=\"language-java\"><ShowCode inlineCode=\"if (a > 10 && a < 20)\" lang=\"java\"/></pre></td>\n\t\t\t\t\t<td>Si la variable a est plus grande que 10 mais plus petite que 20, la condition est vraie.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>||</td>\n\t\t\t\t\t<td>Ou</td>\n\t\t\t\t\t<td><pre class=\"language-java\"><ShowCode inlineCode=\"if (a < 10 || b > 10)\" lang=\"java\"/></pre></td>\n\t\t\t\t\t<td>Si une des deux variables a ou b est plus grande que 10, la condition est vraie.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>!</td>\n\t\t\t\t\t<td>Non</td>\n\t\t\t\t\t<td><pre class=\"language-java\"><ShowCode inlineCode=\"if (!condition)\" lang=\"java\"/></pre></td>\n\t\t\t\t\t<td>Renvoie l'inverse de la condition, dans ce cas il faudrait que condition soit à false pour que la condition soit vraie.</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t\t<p>Comme pour les calculs, on peut utiliser des parenthèses pour donner une priorité de calcul</p>\n\t\t<pre class=\"language-java\"><ShowCode inlineCode=\"if ((a == 5 || b == 5) && c > 10)\n\t\t//pour que cette condition soit valide, il faut que soit a, soit b soit à 5 et que c soit plus grand que 10\" lang=\"java\"/></pre>\n\n\t\t<h3>Else</h3>\n\t\t<p>Else sert à exécuter un autre bout de code si la première condition n'est pas valide, exemple</p>\n\t\t<pre class=\"language-java\"><ShowCode file=\"java/else.java\" lang=\"java\"/></pre>\n\t</div>\n</template>\n\n<script>\n\timport ShowCode from '../../components/ShowCode.vue'\n\n\texport default {\n\t\tname: 'Conditions',\n\t\tcomponents: {\n\t\t\tShowCode,\n\t\t},\n\t}\n</script>\n","import { render } from \"./Conditions.vue?vue&type=template&id=7366d304\"\nimport script from \"./Conditions.vue?vue&type=script&lang=js\"\nexport * from \"./Conditions.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/epsic.burkhalter.dev/epsic.burkhalter.dev/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}