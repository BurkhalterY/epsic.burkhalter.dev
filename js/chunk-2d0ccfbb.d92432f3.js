(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0ccfbb"],{"4ff9":function(e,t,l){"use strict";l.r(t);var n=l("7a23"),a=Object(n["g"])("h1",null,"Lire les entrées clavier",-1),c=Object(n["g"])("p",null,"Pour qu'on puisse interagir avec notre programme, le plus simple est d'utiliser le clavier pour écrire.",-1),u=Object(n["g"])("h3",null,"La classe Scanner",-1),r=Object(n["g"])("p",null,"Pour cela, il existe la classe Scanner. Elle permet de lire ce qu'on a écrit dans la console.",-1),s=Object(n["g"])("p",null,"Avant de l'utiliser, il faut l'importer. Placer cela après le package :",-1),i={class:"language-java"},o=Object(n["g"])("p",null,"Normalement, si vous ne la mettez pas, NetBeans vous proposera de la mettre lui-même quand vous l'utiliserez.",-1),j=Object(n["g"])("h3",null,"Instanciation",-1),g=Object(n["g"])("p",null,"Pour l'utiliser, nous devons écrire ceci au début de la fonction main :",-1),b={class:"language-java"},O=Object(n["g"])("span",null,[Object(n["g"])("strong",null,"Scanner"),Object(n["i"])(" -> Pour l'instant, imaginez-vous que c'est comme un type de variable : on crée une variable de type Scanner.")],-1),p=Object(n["g"])("br",null,null,-1),d=Object(n["g"])("span",null,[Object(n["g"])("strong",null,"sc"),Object(n["i"])(" -> Le nom de votre Scanner, appelez-le comme vous souhaitez.")],-1),m=Object(n["g"])("br",null,null,-1),v=Object(n["g"])("span",null,[Object(n["g"])("strong",null,"= new Scanner(System.in)"),Object(n["i"])(" -> Un truc qui vous semble bizarre pour l'instant. Vous comprendrez immédiatement quand j'aborderais la POO.")],-1),h=Object(n["g"])("h3",null,"Utilisation",-1),x=Object(n["g"])("p",null,"Lorsque vous écrivez une des fonctions si dessous, le programme ce met en pause et attend que vous entriez quelque chose :",-1),f={class:"table"},q=Object(n["g"])("thead",null,[Object(n["g"])("tr",null,[Object(n["g"])("th",null,"Fonction"),Object(n["g"])("th",null,"Retourne"),Object(n["g"])("th",null,"Exemple")])],-1),y=Object(n["g"])("td",null,"sc.nextByte()",-1),S=Object(n["g"])("td",null,"byte",-1),z={class:"language-java"},C=Object(n["g"])("td",null,"sc.nextShort())",-1),L=Object(n["g"])("td",null,"short",-1),w={class:"language-java"},V=Object(n["g"])("td",null,"sc.nextInt()",-1),I=Object(n["g"])("td",null,"int",-1),E={class:"language-java"},P=Object(n["g"])("td",null,"sc.nextLong()",-1),k=Object(n["g"])("td",null,"long",-1),N={class:"language-java"},F=Object(n["g"])("td",null,"sc.nextFloat()",-1),B=Object(n["g"])("td",null,"float",-1),D={class:"language-java"},A=Object(n["g"])("td",null,"sc.nextDouble()",-1),J=Object(n["g"])("td",null,"double",-1),U={class:"language-java"},M=Object(n["g"])("td",null,"sc.nextLine()",-1),R=Object(n["g"])("td",null,"String",-1),G={class:"language-java"},H=Object(n["g"])("p",null,"Attention donc à ce que pourrait écrire l'utilisateur. Car s'il écrit 3.5 dans un nextInt(), votre programme plantera car on ne peut pas stocker de nombre à virgule dans un int par exemple.",-1),K=Object(n["g"])("h3",null,"Le bloc try catch",-1),Q=Object(n["g"])("p",null,"Pour pallier à ce problème, nous pouvons utiliser les exceptions. Les exceptions permettent d'exécuter un autre bout de code si le premier plante. Elles se présentent comme suit :",-1),T={class:"language-java"},W=Object(n["g"])("p",null,"En entrant dans le try, le code se déroule normalement. Si le try se passe bien, le catch n'est pas exécuté. Mais si le try plante, alors nous exécutons ce qu'il y a dans le catch. N'utiliser le bloc try catch seulement là où il est nécessaire, inutile de mettre tout votre programme dans un try catch.",-1),X=Object(n["g"])("p",null,"En paramètre, dans le catch, nous avons NomDeLException. Il s'agit du nom de l'exception. Indiquez ici le nom de l'exception à intercepter.",-1),Y=Object(n["g"])("p",null,"Voici un bout de code qui l'utilise pour empêcher notre utilisateur de noter n'importe quoi :",-1),Z={class:"language-java"},$=Object(n["g"])("ul",null,[Object(n["g"])("li",null,"Voyez qu'on a utilisé l'exception : NumberFormatException."),Object(n["g"])("li",null,"Integer.parseInt(line) prends en paramètre un texte String et renvoie un int si le String ne contient que des chiffres. Sinon il appelle le bloc catch.")],-1);function _(e,t,l,_,ee,te){var le=Object(n["z"])("ShowCode");return Object(n["s"])(),Object(n["f"])("div",null,[a,c,u,r,s,Object(n["g"])("pre",i,[Object(n["j"])(le,{file:"java/import-scanner.java",lang:"java"})]),o,j,g,Object(n["g"])("pre",b,[Object(n["j"])(le,{file:"java/new-scanner.java",lang:"java"})]),O,p,d,m,v,h,x,Object(n["g"])("table",f,[q,Object(n["g"])("tbody",null,[Object(n["g"])("tr",null,[y,S,Object(n["g"])("td",null,[Object(n["g"])("pre",z,[Object(n["j"])(le,{inlineCode:"byte maVar = sc.nextByte();",lang:"java"})])])]),Object(n["g"])("tr",null,[C,L,Object(n["g"])("td",null,[Object(n["g"])("pre",w,[Object(n["j"])(le,{inlineCode:"short maVar = sc.nextShort();",lang:"java"})])])]),Object(n["g"])("tr",null,[V,I,Object(n["g"])("td",null,[Object(n["g"])("pre",E,[Object(n["j"])(le,{inlineCode:"int maVar = sc.nextInt();",lang:"java"})])])]),Object(n["g"])("tr",null,[P,k,Object(n["g"])("td",null,[Object(n["g"])("pre",N,[Object(n["j"])(le,{inlineCode:"long maVar = sc.nextLong();",lang:"java"})])])]),Object(n["g"])("tr",null,[F,B,Object(n["g"])("td",null,[Object(n["g"])("pre",D,[Object(n["j"])(le,{inlineCode:"float maVar = sc.nextFloat();",lang:"java"})])])]),Object(n["g"])("tr",null,[A,J,Object(n["g"])("td",null,[Object(n["g"])("pre",U,[Object(n["j"])(le,{inlineCode:"double maVar = sc.nextDouble();",lang:"java"})])])]),Object(n["g"])("tr",null,[M,R,Object(n["g"])("td",null,[Object(n["g"])("pre",G,[Object(n["j"])(le,{inlineCode:"String maVar = sc.nextLine();",lang:"java"})])])])])]),H,K,Q,Object(n["g"])("pre",T,[Object(n["j"])(le,{file:"java/try-catch.java",lang:"java"})]),W,X,Y,Object(n["g"])("pre",Z,[Object(n["j"])(le,{file:"java/programme-saisie-nombres.java",lang:"java"})]),$])}var ee=l("02c0"),te={name:"Clavier",components:{ShowCode:ee["a"]}},le=l("d959"),ne=l.n(le);const ae=ne()(te,[["render",_]]);t["default"]=ae}}]);
//# sourceMappingURL=chunk-2d0ccfbb.d92432f3.js.map