import{_ as s}from"./ShowCode-a68850d8.js";import{o as r,c as l,f as n,a as e,e as t,s as o}from"./index-1bfe471e.js";const u=e("p",null," Le SQL est un langage permettant d'interagir avec une base de données. Ici, nous allons l'utiliser pour récupérer des données d'une ou plusieurs tables. ",-1),a=e("h2",null,"SELECT",-1),i=e("p",null," Pour récupérer des données, nous allons utiliser l'instruction SELECT. En voici un exemple : ",-1),d=e("ul",{class:"!list-none !ml-0"},[e("li",null,[t(" L'étoile ("),e("strong",null,"*"),t(") signifie que nous voulons tous les champs de la table. ")]),e("li",null,[e("strong",null,"FROM"),t(" est un mot clé qui précède le nom de la table source. ")]),e("li",null,[e("strong",null,"t_personne"),t(" est la table source, mettez ici le nom de la table. ")])],-1),p=e("h2",null,"Ne sélectionner que les champs voulus",-1),c=e("p",null," Pour ne prendre que certains champs de t_personnes, on peut remplacer l'étoile (*) par le nom de chacun des champs désirés séparés d'une virgule : ",-1),m=e("p",null," Cette requête renverra uniquement des valeurs pour les champs nom et prenom et ignorera les autres. ",-1),_=e("h2",null,"Ajouter un filtre",-1),E=e("p",null,[t(" Le mot clé "),e("strong",null,"WHERE"),t(" permet d'ajouter un filtre à une requête. Ne seront retournés que les enregistrements qui remplissent la condition située après le WHERE. Exemple : ")],-1),h=o('<p> Ici, l&#39;opérateur est <strong>LIKE</strong>. Voici une liste des principaux opérateurs : </p><table><tr><th class="text-start">Opérateur</th><th class="text-start">Description</th><th class="text-start">Exemple</th><th class="text-start">Description</th></tr><tr><td>=</td><td>Strictement égale</td><td>WHERE id_pers = 5</td><td>Uniquement la personne N° 5</td></tr><tr><td>&lt;</td><td>Plus petit</td><td>WHERE prix_article &lt; 10</td><td>Tous les articles qui coutent moins de 10</td></tr><tr><td>&lt;=</td><td>Plus petit ou égale</td><td>WHERE prix_article &lt;= 10</td><td>Tous les articles qui coutent moins de 10 ou 10</td></tr><tr><td>&gt;</td><td>Plus grand</td><td>WHERE prix_article &gt; 10</td><td>Tous les articles qui coutent plus que 10</td></tr><tr><td>&gt;=</td><td>Plus grand ou égale</td><td>WHERE prix_article &gt;= 10</td><td>Tous les articles qui coutent plus que 10 ou 10</td></tr><tr><td>LIKE</td><td>Comme</td><td>WHERE nom_pers LIKE &#39;%a%&#39;</td><td> Toutes les personnes qui ont la lettre &quot;a&quot; dans leur nom (% est un joker) </td></tr></table><p> Il est aussi possible de combiner des conditions avec les opérateurs AND et OR et de régler leurs priorités avec des parenthèses. </p><h2>Trier les enregistrements</h2><p> Il est possible de trier les enregistrements avec le mot clé <strong>ORDER BY</strong>. Exemple : </p>',5),g=e("p",null," Cette requête renvoie les personnes triées par nom. ATTENTION cependant, cela ne change pas l'ordre des champs dans la table, mais uniquement à l'affichage. Un SELECT ne peut jamais (à lui seul) modifier la base de données. ",-1),q=e("p",null,[t(" Il est également possible de"),e("br"),t(" - ajouter le mot clé DESC pour trier à l'envers"),e("br"),t(" - trier sur plusieurs champs en les séparant par des virgules"),e("br")],-1),R=e("p",null,"Exemples :",-1),b=e("p",null,"Trier dans l'ordre alphabétique inverse :",-1),T=e("p",null,"Trier par nom puis par prénom :",-1),L=e("h2",null,"Limiter le nombre de résultats",-1),x=e("p",null,[t(" Il est possible de limiter le nombre d'enregistrements retournés. Pour ça, ajouter le mot clé "),e("strong",null,"LIMIT"),t(". ")],-1),I=e("p",null,"Exemple, afficher 20 enregistrements :",-1),C=e("h2",null,"Combiner ces règles !",-1),S=e("p",null," Il est bien sûr possible de combiner plusieurs de ces mots clés pour créer une requête plus complexe : ",-1),O=e("p",null,` Cette requête retourne les 20 personnes dont le nom commence par "a" qui sont les plus hautes dans l'ordre alphabétique. `,-1),N={__name:"SqlSelect",setup(v){return(f,M)=>(r(),l("div",null,[u,a,i,n(s,{raw:"SELECT * FROM t_personnes",lang:"sql"}),d,p,c,n(s,{raw:"SELECT nom, prenom FROM t_personnes",lang:"sql"}),m,_,E,n(s,{raw:"SELECT * FROM t_personnes WHERE nom LIKE 'a%'",lang:"sql"}),h,n(s,{raw:"SELECT * FROM t_personnes ORDER BY nom",lang:"sql"}),g,q,R,b,n(s,{raw:"SELECT * FROM t_personnes ORDER BY nom DESC",lang:"sql"}),T,n(s,{raw:"SELECT * FROM t_personnes ORDER BY nom, prenom",lang:"sql"}),L,x,I,n(s,{raw:"SELECT * FROM t_personnes LIMIT 20",lang:"sql"}),C,S,n(s,{raw:"SELECT * FROM t_personnes WHERE nom LIKE 'a%' ORDER BY nom, prenom LIMIT 20",lang:"sql"}),O]))}};export{N as default};
