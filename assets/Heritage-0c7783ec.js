import{_ as s}from"./ShowCode-711ce689.js";import{o as l,c as n,e as t,d as a,a as e}from"./index-d59bb747.js";const o=e("p",null," L'héritage est une notion de POO. Elle permet de définir une classe comme enfant d'une autre classe. C'est-à-dire que la classe enfant reprenne toutes les méthodes et tous les attributs de la classe parente. Le programmeur peut quand même y ajouter ses propres méthodes et attributs. ",-1),r=e("p",null,[a(" Pour faire hériter une classe d'une autre classe, on utilise le mot réservé "),e("code",null,"extends"),a(". Il s'utilise comme ceci dans la déclaration de la classe : ")],-1),c=e("p",null,"Les classes enfants ont les propriétés suivantes :",-1),i=e("ul",null,[e("li",null," Elles reprennent tous les attributs et méthodes de la classe parente. "),e("li",null," Si on y déclare une méthode avec le même nom que la classe parente, celle de la classe parente sera ignoré et remplacé par celle de la classe enfant. ")],-1),u=e("h2",null,"Exemple",-1),d=e("code",null,"Personne",-1),p=e("code",null,"Apprenti",-1),m=e("p",null,[a(" Ici, la classe "),e("code",null,"Apprenti"),a(" hérite de "),e("code",null,"Personne"),a(". Ce qui veut dire qu'elle peut être utilisé exactement comme la classe Personne mais avec l'attribut "),e("code",null,"formation"),a(" en plus. ")],-1),j={__name:"Heritage",setup(_){return(h,f)=>(l(),n("div",null,[o,r,t(s,{file:"/poo/code/heritage0.java",lang:"java"}),c,i,u,a(" La classe parente "),d,t(s,{file:"/poo/code/heritage1.java",lang:"java"}),a(" La classe enfant "),p,t(s,{file:"/poo/code/heritage2.java",lang:"java"}),m]))}};export{j as default};
