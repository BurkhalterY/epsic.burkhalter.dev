import{_ as a}from"./ShowCode-3b64f026.js";import{_ as i,r as u,o as r,c,a as e,e as t,d as l,w as d,B as p,z as m,A as h}from"./index-7f407549.js";const s=n=>(m("data-v-15fb6ce2"),n=n(),h(),n),v=s(()=>e("p",null,[l(" Les formulaires servent souvent √† communiquer avec un backend. Ils peuvent aussi √™tre utilis√©s pour laisser l'utilisateur int√©ragir avec le JavaScript en y entrant des informations qui seront trait√©es. Sur cette page, nous n'allons voir ni l'une ni l'autre des m√©thodes. Car il n'y a pas de process dans le backend d'un site statique et parce que le JavaScript fera l'objet de la 3"),e("sup",null,"e"),l(" partie du module. ")],-1)),_=s(()=>e("p",null,"Voici un exemple de formulaire avec quelques champs :",-1)),b={class:"grid grid-cols-2"},f=s(()=>e("div",{class:"text-center"},[e("br"),e("form",{action:"login_form.php",method:"POST"},[e("label",{for:"username"},"Nom d'utilisateur :¬†"),e("input",{type:"text",name:"username",id:"username"}),e("br"),e("label",{for:"password"},"Mot de passe :¬†"),e("input",{type:"password",name:"password",id:"password"}),e("br"),e("input",{type:"submit",value:"Envoyer",class:"!rounded cursor-pointer bg-neutral-100 hover:bg-neutral-200"})])],-1)),g=s(()=>e("p",null,"Regardons tout cela de plus pr√®s :",-1)),q=s(()=>e("ul",null,[e("li",null,[e("code",null,"action"),l(" va √™tre la page sur laquelle envoyer la requ√™te. ")]),e("li",null,[e("code",null,"method"),l(" va √™tre le verbe HTTP utilis√© (GET ou POST). Dans ce cours, nous allons principalement utiliser GET puisque nous n'avons pas de backend. ")]),e("ul",null,[e("li",null,"GET va passer les champs dans l'URL."),e("li",null," POST les passe dans la requ√™te HTTP et n√©cessite donc un serveur backend pour les r√©cup√©rer (ex. PHP). ")])],-1)),w=p("<ul data-v-15fb6ce2><li data-v-15fb6ce2><code data-v-15fb6ce2>type</code> est le type de champs. Valeurs possibles : <code data-v-15fb6ce2>text</code>, <code data-v-15fb6ce2>password</code>, <code data-v-15fb6ce2>checkbox</code>, <code data-v-15fb6ce2>radio</code>, <code data-v-15fb6ce2>file</code>, etc. </li><li data-v-15fb6ce2><code data-v-15fb6ce2>name</code> qui permet de r√©cup√©rer la valeur du formulaire dans le backend ou via le JavaScript. </li></ul>",1),x=s(()=>e("ul",null,[e("li",null,[e("code",null,"for"),l(` qui "lie" le label au champ. Principalement pour qu'un clic sur le label permette directement de modifier le champ (essayez-par vous-m√™me üòâ). Pour que cela fonctionne, il faut avoir ajout√© un attribut `),e("code",null,"id"),l(" au champ. En effet, l'attribut "),e("code",null,"for"),l(" se r√©f√®re √† l'ID et non au "),e("code",null,"name"),l(". Mettre la m√™me valeur suffira. ")])],-1)),y=s(()=>e("code",null,"submit",-1)),L=s(()=>e("code",null,"value",-1)),S=s(()=>e("ul",null,[e("li",null,[l(" Il existe aussi un bouton de type "),e("code",null,"reset"),l(" qui vide enti√®rement le formulaire. ")])],-1)),T=s(()=>e("h2",null,"Liste d√©roulante",-1)),k={class:"grid grid-cols-2"},I=s(()=>e("div",{class:"text-center"},[e("br"),e("select",{name:"character",id:"character"},[e("option",null,"Mario"),e("option",null,"Luigi"),e("option",null,"Wario"),e("option",null,"Waluigi")])],-1)),P=s(()=>e("p",null,[l(" Il y a vraiment √©norm√©ment d'attributs en HTML. Il m'est difficile de tous les pr√©senter au risque de donner trop d'informations. Le mieux est que vous cherchiez par vous-m√™me lorsque vous avez besoin de quelque chose en particulier (je recommande "),e("a",{href:"https://www.w3schools.com/html/default.asp",target:"_blank"}," W3Schools "),l(" au d√©but pour le HTML). ")],-1)),z={__name:"Form",setup(n){return(E,V)=>{const o=u("router-link");return r(),c("div",null,[v,_,e("div",b,[e("div",null,[t(a,{file:"/html/code/form.html",lang:"html"})]),f]),g,e("ul",null,[e("li",null,[l(" Les champs doivent se trouver dans une balise "),t(a,{raw:"<form>",lang:"html",inline:!0}),l(". ")]),e("li",null,[l(" La balise "),t(a,{raw:"<form>",lang:"html",inline:!0}),l(" a deux attributs : ")]),q,e("li",null,[l(" Les champs sont d√©finis par la balise "),t(a,{raw:"<input>",lang:"html",inline:!0}),l(" qui prend aussi deux attributs : ")]),w,e("li",null,[l(" Les noms affich√©s des champs doivent se trouver dans une balise "),t(a,{raw:"<label>",lang:"html",inline:!0}),l(" qui poss√®de l'attribut : ")]),x,e("li",null,[l(" ‚ö† les champs comme les labels sont des balises de type "),t(o,{to:"/html/types-balises"},{default:d(()=>[l("inline")]),_:1}),l(". Si vous ne les forcez pas (par exemple avec un "),t(a,{raw:"<br>",lang:"html",inline:!0}),l("), elles se mettront toutes sur une ligne. ")]),e("li",null,[l(" Les boutons d'envoi ne sont en fait que des balises "),t(a,{raw:"<input>",lang:"html",inline:!0}),l(" avec le type "),y,l(". Leur attribut "),L,l(" permet de modifier le texte de leur bouton. ")]),S]),T,e("p",null,[l(" La balise "),t(a,{raw:"<input>",lang:"html",inline:!0}),l(" ne permet pas de cr√©er de liste d√©roulante. √Ä la place, nous utilisons "),t(a,{raw:"<select>",lang:"html",inline:!0}),l(" et "),t(a,{raw:"<option>",lang:"html",inline:!0}),l(" : ")]),e("div",k,[e("div",null,[t(a,{file:"/html/code/select.html",lang:"html"})]),I]),e("p",null,[l(" ‚ö† J'ai omis ici la balise "),t(a,{raw:"<form>",lang:"html",inline:!0}),l(" pour des raisons de lisibilit√©, mais ne l'oubliez pas. ")]),P])}}},N=i(z,[["__scopeId","data-v-15fb6ce2"]]);export{N as default};
